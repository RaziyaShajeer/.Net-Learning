// <auto-generated />
using System;
using FoodOrderingSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodOrderingSystem.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250509051106_55")]
    partial class _55
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodOrderingSystem.DTO.UserDTO", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("UserDTO");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Cart", b =>
                {
                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId")
                        .HasName("PK__Cart__51BCD7B78862E83E");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Cartitem", b =>
                {
                    b.Property<Guid>("CartItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Cartid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("Quanity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("CartItemId")
                        .HasName("PK__Cartitem__488B0B0A3FD7C69B");

                    b.HasIndex("DishId");

                    b.ToTable("Cartitem");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Dish", b =>
                {
                    b.Property<Guid>("DishId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Availablity")
                        .HasColumnType("int");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("Createdat")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<byte[]>("DishImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DishId")
                        .HasName("PK__Dish__18834F501F9461B5");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA4975324939F");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.MyOrder", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId")
                        .HasName("PK__MyOrder__C3905BCFFB2199AF");

                    b.HasIndex("UserId");

                    b.ToTable("MyOrder");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.MyUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserId")
                        .HasName("PK__MyUser__1788CC4C3F1B5C0A");

                    b.HasIndex("LocationId");

                    b.ToTable("MyUser");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("orderId");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("OrderItemId")
                        .HasName("PK__OrderIte__57ED06813226F653");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.RestaurantAdmin", b =>
                {
                    b.Property<Guid>("RestaurantAdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestaurantAdminId")
                        .HasName("PK__Restaura__F5EA8F876F0D6D3A");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantAdmin");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.RestaurantProfile", b =>
                {
                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<byte[]>("RestaurantImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RestauratType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId")
                        .HasName("PK__Restaura__87454C95236D507F");

                    b.HasIndex("LocationId");

                    b.ToTable("RestaurantProfile");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Cart", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.MyUser", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Cart_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Cartitem", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.Dish", "Dish")
                        .WithMany("Cartitems")
                        .HasForeignKey("DishId")
                        .IsRequired()
                        .HasConstraintName("FK_Cartitem_Dish");

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Dish", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.RestaurantProfile", "Restaurant")
                        .WithMany("Dishes")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_Dish_RestaurantProfile");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.MyOrder", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.MyUser", "User")
                        .WithMany("MyOrders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.MyUser", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.Location", "Location")
                        .WithMany("MyUsers")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_MyUser_Location");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.OrderItem", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.MyOrder", "OrderItemNavigation")
                        .WithOne("OrderItem")
                        .HasForeignKey("FoodOrderingSystem.Models.OrderItem", "OrderItemId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Order");

                    b.Navigation("OrderItemNavigation");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.RestaurantAdmin", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.RestaurantProfile", "Restaurant")
                        .WithMany("RestaurantAdmins")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_RestaurantAdmin_RestaurantProfile");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.RestaurantProfile", b =>
                {
                    b.HasOne("FoodOrderingSystem.Models.Location", "Location")
                        .WithMany("RestaurantProfiles")
                        .HasForeignKey("LocationId")
                        .IsRequired()
                        .HasConstraintName("FK_RestaurantProfile_Location");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Dish", b =>
                {
                    b.Navigation("Cartitems");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.Location", b =>
                {
                    b.Navigation("MyUsers");

                    b.Navigation("RestaurantProfiles");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.MyOrder", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.MyUser", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("MyOrders");
                });

            modelBuilder.Entity("FoodOrderingSystem.Models.RestaurantProfile", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("RestaurantAdmins");
                });
#pragma warning restore 612, 618
        }
    }
}
