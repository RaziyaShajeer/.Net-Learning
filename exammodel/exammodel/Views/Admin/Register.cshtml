@model exammodel.Models.teacher

@{
    ViewData["Title"] = "Register";
}

<h1 class="text-center">Register</h1>


<div class="d-flex justify-content-center align-items-center " style="max-height:80vh">
    <div class="col-md-4">
        <form asp-action="Register" class="shadow rounded bg-">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ListTeachers">Back to List</a>
</div>

@if (ViewData["message"] != null)
{
    <div class="alert alert-success">@ViewData["message"]</div>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
